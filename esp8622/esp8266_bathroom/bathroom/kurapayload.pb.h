/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Tue Oct 31 17:54:12 2017. */

#ifndef PB_KURADATATYPES_KURAPAYLOAD_PB_H_INCLUDED
#define PB_KURADATATYPES_KURAPAYLOAD_PB_H_INCLUDED
#define PB_FIELD_16BIT
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _kuradatatypes_KuraPayload_KuraMetric_ValueType {
    kuradatatypes_KuraPayload_KuraMetric_ValueType_DOUBLE = 0,
    kuradatatypes_KuraPayload_KuraMetric_ValueType_FLOAT = 1,
    kuradatatypes_KuraPayload_KuraMetric_ValueType_INT64 = 2,
    kuradatatypes_KuraPayload_KuraMetric_ValueType_INT32 = 3,
    kuradatatypes_KuraPayload_KuraMetric_ValueType_BOOL = 4,
    kuradatatypes_KuraPayload_KuraMetric_ValueType_STRING = 5,
    kuradatatypes_KuraPayload_KuraMetric_ValueType_BYTES = 6
} kuradatatypes_KuraPayload_KuraMetric_ValueType;
#define _kuradatatypes_KuraPayload_KuraMetric_ValueType_MIN kuradatatypes_KuraPayload_KuraMetric_ValueType_DOUBLE
#define _kuradatatypes_KuraPayload_KuraMetric_ValueType_MAX kuradatatypes_KuraPayload_KuraMetric_ValueType_BYTES
#define _kuradatatypes_KuraPayload_KuraMetric_ValueType_ARRAYSIZE ((kuradatatypes_KuraPayload_KuraMetric_ValueType)(kuradatatypes_KuraPayload_KuraMetric_ValueType_BYTES+1))

/* Struct definitions */
typedef struct _kuradatatypes_KuraPayload_KuraMetric {
    pb_callback_t name;
    kuradatatypes_KuraPayload_KuraMetric_ValueType type;
    bool has_double_value;
    double double_value;
    bool has_float_value;
    float float_value;
    bool has_long_value;
    int64_t long_value;
    bool has_int_value;
    int32_t int_value;
    bool has_bool_value;
    bool bool_value;
    pb_callback_t string_value;
    pb_callback_t bytes_value;
/* @@protoc_insertion_point(struct:kuradatatypes_KuraPayload_KuraMetric) */
} kuradatatypes_KuraPayload_KuraMetric;

typedef struct _kuradatatypes_KuraPayload_KuraPosition {
    double latitude;
    double longitude;
    bool has_altitude;
    double altitude;
    bool has_precision;
    double precision;
    bool has_heading;
    double heading;
    bool has_speed;
    double speed;
    bool has_timestamp;
    int64_t timestamp;
    bool has_satellites;
    int32_t satellites;
    bool has_status;
    int32_t status;
/* @@protoc_insertion_point(struct:kuradatatypes_KuraPayload_KuraPosition) */
} kuradatatypes_KuraPayload_KuraPosition;

typedef struct _kuradatatypes_KuraPayload {
    bool has_timestamp;
    int64_t timestamp;
    bool has_position;
    kuradatatypes_KuraPayload_KuraPosition position;
    pb_extension_t *extensions;
    pb_callback_t metric;
    pb_callback_t body;
/* @@protoc_insertion_point(struct:kuradatatypes_KuraPayload) */
} kuradatatypes_KuraPayload;

/* Default values for struct fields */

/* Initializer values for message structs */
#define kuradatatypes_KuraPayload_init_default   {false, 0, false, kuradatatypes_KuraPayload_KuraPosition_init_default, NULL, {{NULL}, NULL}, {{NULL}, NULL}}
#define kuradatatypes_KuraPayload_KuraMetric_init_default {{{NULL}, NULL}, (kuradatatypes_KuraPayload_KuraMetric_ValueType)0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define kuradatatypes_KuraPayload_KuraPosition_init_default {0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define kuradatatypes_KuraPayload_init_zero      {false, 0, false, kuradatatypes_KuraPayload_KuraPosition_init_zero, NULL, {{NULL}, NULL}, {{NULL}, NULL}}
#define kuradatatypes_KuraPayload_KuraMetric_init_zero {{{NULL}, NULL}, (kuradatatypes_KuraPayload_KuraMetric_ValueType)0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define kuradatatypes_KuraPayload_KuraPosition_init_zero {0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define kuradatatypes_KuraPayload_KuraMetric_name_tag 1
#define kuradatatypes_KuraPayload_KuraMetric_type_tag 2
#define kuradatatypes_KuraPayload_KuraMetric_double_value_tag 3
#define kuradatatypes_KuraPayload_KuraMetric_float_value_tag 4
#define kuradatatypes_KuraPayload_KuraMetric_long_value_tag 5
#define kuradatatypes_KuraPayload_KuraMetric_int_value_tag 6
#define kuradatatypes_KuraPayload_KuraMetric_bool_value_tag 7
#define kuradatatypes_KuraPayload_KuraMetric_string_value_tag 8
#define kuradatatypes_KuraPayload_KuraMetric_bytes_value_tag 9
#define kuradatatypes_KuraPayload_KuraPosition_latitude_tag 1
#define kuradatatypes_KuraPayload_KuraPosition_longitude_tag 2
#define kuradatatypes_KuraPayload_KuraPosition_altitude_tag 3
#define kuradatatypes_KuraPayload_KuraPosition_precision_tag 4
#define kuradatatypes_KuraPayload_KuraPosition_heading_tag 5
#define kuradatatypes_KuraPayload_KuraPosition_speed_tag 6
#define kuradatatypes_KuraPayload_KuraPosition_timestamp_tag 7
#define kuradatatypes_KuraPayload_KuraPosition_satellites_tag 8
#define kuradatatypes_KuraPayload_KuraPosition_status_tag 9
#define kuradatatypes_KuraPayload_timestamp_tag  1
#define kuradatatypes_KuraPayload_position_tag   2
#define kuradatatypes_KuraPayload_metric_tag     5000
#define kuradatatypes_KuraPayload_body_tag       5001

/* Struct field encoding specification for nanopb */
extern const pb_field_t kuradatatypes_KuraPayload_fields[6];
extern const pb_field_t kuradatatypes_KuraPayload_KuraMetric_fields[10];
extern const pb_field_t kuradatatypes_KuraPayload_KuraPosition_fields[10];

/* Maximum encoded size of messages (where known) */
/* kuradatatypes_KuraPayload_size depends on runtime parameters */
/* kuradatatypes_KuraPayload_KuraMetric_size depends on runtime parameters */
#define kuradatatypes_KuraPayload_KuraPosition_size 87

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define KURAPAYLOAD_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
